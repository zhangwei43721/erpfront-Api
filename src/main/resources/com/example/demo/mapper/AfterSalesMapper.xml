<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AfterSalesMapper">

    <resultMap id="BaseResultMap" type="com.example.demo.pojo.AfterSales">
        <id property="id" column="id"/>
        <result property="custId" column="cust_id"/>
        <result property="question" column="question"/>
        <result property="state" column="state"/>
        <result property="record" column="record"/>
        <result property="level" column="level"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,cust_id,question,state,record,level
    </sql>
    <select id="queryAfterSaleMapper" resultType="com.example.demo.pojo.AfterSales">
        select aft.*,customer.cust_name custName from t_customer customer
        inner join t_after_sales aft on customer.id=aft.cust_id
        <where>
            <if test="id!=null">
                aft.id=#{id}
            </if>
            <if test="question!=null and question!=''">
                and question=#{question}
            </if>
            <if test="state!=null and state!=''">
                and state=#{state}
            </if>
            <if test="grade!=null and grade!=''">
                and aft.grade=#{grade}
            </if>
        </where>
    </select>

    <select id="countQuestionTypeMapper" resultType="com.example.demo.dto.CountResult">
        select sum                                                          'value',
               concat(question, ' : ', TRUNCATE(sum / total * 100, 2), '%') 'name'
        from (select question
                   , count(id)                             sum
                   , (select count(id) from t_after_sales) total
              from t_after_sales
              group by question) out_table
    </select>
    <!--定义sql按照投诉处理状态，进行统计-->
    <select id="countQuestionStateMapper" resultType="com.example.demo.dto.CountResult">
        select sum                                                              'value',
               concat(' [ ', state, ' ] ', TRUNCATE(sum / total * 100, 2), '%') 'name'
        from (select state
                   , count(id)                             sum
                   , (select count(id) from t_after_sales) total
              from t_after_sales
              group by state) out_table
    </select>
</mapper>
